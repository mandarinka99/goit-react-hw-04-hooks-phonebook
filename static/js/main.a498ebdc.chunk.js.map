{"version":3,"sources":["Components/container/Container.module.css","Components/createContactForm/CreateContactForm.module.css","Components/contactsList/ContactsList.js","Components/container/Container.js","Components/createContactForm/CreateContactForm.js","Components/filterContacts/FilterContacts.js","Components/App.js","index.js","Components/contactsList/ContactsList.module.css","Components/filterContacts/FilterContactForm.module.css"],"names":["module","exports","ContactsList","contacts","deleteContact","className","s","list","map","contact","item","name","number","button","onClick","id","Container","children","styles","container","initialState","CreateContactForm","onChange","useState","setContact","onHandleChange","e","target","value","formWrapper","onSubmit","preventDefault","form","label","input","type","pattern","title","required","FilterContacts","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newFilter","toLowerCase","includes","find","alert","contactsArr","push","uuidv4","newContactsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a498ebdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nGXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"CreateContactForm_formWrapper__1CZxu\",\"form\":\"CreateContactForm_form__36rZ_\",\"label\":\"CreateContactForm_label__EcFAo\",\"input\":\"CreateContactForm_input__3zn7G\",\"button\":\"CreateContactForm_button__2nkw7\"};","import s from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({contacts, deleteContact}) => {\n  return (\n    <div>\n    <ul className={s.list}>\n    {contacts.map(\n      contact => (\n        <li className={s.item}\n          key={contact.id}>\n          {contact.name}{' '}\n          {contact.number}{' '}\n          <button className={s.button} onClick={() => deleteContact(contact.id)}>Delete</button>\n        </li>\n       ))}\n    </ul>\n    </div>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n}\n\nexport default ContactsList;","import styles from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired\n}\n\nexport default Container;\n","import React, { useState } from \"react\";\nimport s from \"./CreateContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst initialState = {\n  name: '',\n  number: ''\n};\n\nconst CreateContactForm = ({onChange}) => {\n  const [contact, setContact] = useState({...initialState});\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setContact({...contact, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onChange(contact.number, contact.name);\n    setContact({\n      name: '',\n      number: ''\n    })\n  }\n\n  return (\n    <div className={s.formWrapper}>\n    <form onSubmit={onSubmit}\n    className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={contact.name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      onChange={onHandleChange}/>\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n        className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={contact.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onHandleChange}\n        />\n\n      </label>\n      <button type=\"submit\"\n      className={s.button}>\n        Add contact\n      </button>\n    </form>\n    </div>\n  );\n}\n\nCreateContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default CreateContactForm;","import s from \"./FilterContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FilterContacts = ({onHandleChange}) => {\n  return (\n    <div>\n      <form className={s.form} onSubmit={e => e.preventDefault()}>\n        <label className={s.label}>\n          Find contacts by name\n          <input\n          className={s.input}\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={onHandleChange}\n          />\n        </label>\n      </form>\n    </div>\n  );\n}\n\nFilterContacts.propTypes = {\n  onHandleChange: PropTypes.func,\n}\n\nexport default FilterContacts;","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport Container from \"./container/Container\";\nimport CreateContactForm from \"./createContactForm/CreateContactForm\";\nimport FilterContacts from \"./filterContacts/FilterContacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onHandleChange = (e) => {\n    setFilter( e.target.value) \n  };\n\n  const onSubmit = (number, name) => {\n    const find = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (find) return alert(`${name} is already in contacts`);\n    const contactsArr = [...contacts];\n    contactsArr.push({\n      id: uuidv4(),\n      name,\n      number,\n    });\n    setContacts( contactsArr );\n  };\n\n  const deleteContact = (id) => {\n    const newContactsList = contacts.filter((contact) => contact.id !== id);\n    setContacts(newContactsList);\n  };\n\n  let newFilter = contacts;\n  if (filter) {\n    newFilter = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n  \n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <CreateContactForm onChange={onSubmit} />\n      <h2>Contacts</h2>\n      <FilterContacts onHandleChange={onHandleChange} />\n      <ContactsList contacts={newFilter} deleteContact={deleteContact} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3I0VP\",\"item\":\"ContactsList_item__1abdr\",\"button\":\"ContactsList_button__M9UiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FilterContactForm_form__jAwRI\",\"label\":\"FilterContactForm_label__3M5aP\",\"input\":\"FilterContactForm_input__1ERN7\"};"],"sourceRoot":""}